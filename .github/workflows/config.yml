name: 'Configurações'

on:
  workflow_call:
    inputs:
      image-name-prefix:
        required: false
        type: string
        default: "ghcr.io/portal-br/legislativo"
      node-version:
        required: false
        type: string
        default: "22.x"
      python-version:
        required: false
        type: string
        default: "3.12"
    outputs:
      backend:
        description: "Flag reporting if we should run the backend jobs"
        value: ${{ jobs.config.outputs.backend }}
      docs:
        description: "Flag reporting if we should run the docs jobs"
        value: ${{ jobs.config.outputs.docs }}
      frontend:
        description: "Flag reporting if we should run the frontend jobs"
        value: ${{ jobs.config.outputs.frontend }}
      base-tag:
        description: "Base tag to be used when creating container images"
        value: ${{ jobs.config.outputs.base-tag }}
      image-name-prefix:
        description: "Image name prefix for container images"
        value: ${{ inputs.image-name-prefix }}
      node-version:
        description: "Node version to be used"
        value: ${{ inputs.node-version }}
      python-version:
        description: "Python version to be used"
        value: ${{ inputs.python-version }}
      pb-version:
        description: "PortalBrasil version to be used"
        value: ${{ jobs.config.outputs.pb-version }}
      volto-version:
        description: "Volto version to be used"
        value: ${{ jobs.config.outputs.volto-version }}

jobs:
  config:
    runs-on: ubuntu-latest
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      base-tag: ${{ steps.vars.outputs.base-tag }}
      docs: ${{ steps.filter.outputs.docs }}
      frontend: ${{ steps.filter.outputs.frontend }}
      image-name-prefix: ${{ inputs.image-name-prefix }}
      node-version: ${{ inputs.node-version }}
      pb-version: ${{ steps.vars.outputs.pb-version }}
      python-version: ${{ inputs.python-version }}
      volto-version: ${{ steps.vars.outputs.volto-version }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Compute several vars needed for the CI
        id: vars
        run: |
          echo "base-tag=sha-$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "pb-version=$(cat version.txt)" >> $GITHUB_OUTPUT
          python3 -c 'import json; data = json.load(open("./frontend/mrs.developer.json")); print("volto-version=" + (data["core"].get("tag") or "latest"))' >> $GITHUB_OUTPUT

      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            backend:
              - 'backend/**'
              - '.github/workflows/backend.yml'
            docs:
              - 'docs/**'
              - 'README.md'
              - '.github/workflows/docs.yml'
            frontend:
              - 'frontend/**'
              - '.github/workflows/frontend.yml'

      - name: Test vars
        run: |
          echo 'backend=${{ steps.filter.outputs.backend }}'
          echo 'base-tag=${{ steps.vars.outputs.base-tag }}'
          echo 'docs=${{ steps.filter.outputs.docs }}'
          echo 'frontend=${{ steps.filter.outputs.frontend }}'
          echo 'image-name-prefix=${{ inputs.image-name-prefix }}'
          echo 'node-version=${{ inputs.node-version }}'
          echo 'pb-version=${{ steps.vars.outputs.pb-version }}'
          echo 'python-version=${{ inputs.python-version }}'
          echo 'volto-version=${{ steps.vars.outputs.volto-version }}'